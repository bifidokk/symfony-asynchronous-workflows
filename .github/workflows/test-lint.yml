name: Habit CI
on: [push, pull_request]
jobs:
  symfony:
    name: Symfony (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.1
        env:
          POSTGRES_PASSWORD: symfony
          POSTGRES_DB: symfony
          POSTGRES_USER: symfony
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql
          coverage: xdebug #optional
          tools: cs2pr, phpstan
      - name: Security
        uses: symfonycorp/security-checker-action@v4
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: |
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
      - name: Run Migration
        run: |
          composer require symfony/orm-pack
          php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
        env:
          DATABASE_URL: postgres://symfony:symfony@127.0.0.1:${{ job.services.postgres.ports[5432] }}/symfony?charset=UTF-8
      - name: Run Tests
        run: php ./vendor/bin/phpunit --coverage-text
        env:
          DATABASE_URL: postgres://symfony:symfony@127.0.0.1:${{ job.services.postgres.ports[5432] }}/symfony?charset=UTF-8
          TG_BOT_WEBHOOK_TOKEN: token
      - name: PHPStan
        run: vendor/bin/phpstan analyse src --level 7
      - name: Code style
        run: vendor/bin/ecs check src tests
